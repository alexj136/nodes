new loop: @{;int}.
new subten: @{; int, @{;int}}.
new double_subten: @{; int, @{;int}}.
new addone_double_subten: @{; int, @{;int}}.
new print: @{k; k}.
[
    server subten;; n: int, rch: @{;int}.
    send rch;; n - 10.
    end

|

    server double_subten;; n: int, rch: @{;int}.
    new rch_d: @{;int}.
    send subten;; n * 2, rch_d.
    receive rch_d;; res: int.
    send rch;; res.
    end

|

    server addone_double_subten;; n: int, rch: @{;int}.
    new rch_d: @{;int}.
    send double_subten;; n + 1, rch_d.
    receive rch_d;; res: int.
    send rch;; res.
    end

|

    server loop;; x: int.
    if x < 1000000000 then
        send print; int; x.
        new rch: @{;int}.
        send addone_double_subten;; x, rch.
        receive rch;; n: int.
        send loop;; n.
        end
    else
        send print; int; x.
        end
    endif

|

    send loop;; 9.
    end
]
