[
    send $a : [ 'a' , 'b' , 'c' ] .
    send $a : "def" .
    end
|
    receive $a : first  of string .
    receive $a : second of string .
    new rch_wrongcat of @string .
    send $wrongcat : { { first , second } , rch_wrongcat } .
    receive rch_wrongcat : all of string .
    send $print : all .
    end
|
    server $wrongcat : first_second__rch of { { string , string } , @string } .
    let rch          of @string             = -> first_second__rch .
    let first_second of { string , string } = <- first_second__rch .
    let second       of string              = -> first_second .
    let first        of string              = <- first_second .
    if ? first then
        send rch : second .
        end
    else
        send $wrongcat : { { -** first , ( *-- first ) :: second } , rch } .
        end
    endif
]
